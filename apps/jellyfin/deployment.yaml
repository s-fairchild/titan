apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      name: jellyfin
      namespace: jellyfin
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        livenessProbe:
          tcpSocket:
            port: http-web-svc
          initialDelaySeconds: 120
          periodSeconds: 5
        env:
        - name: JELLYFIN_PublishedServerUrl
          value: https://jellyfin.rick.expresso.lan
        image: docker.io/jellyfin/jellyfin:latest
        ports:
        - containerPort: 8096
          name: http-web-svc
          protocol: TCP
        securityContext:
          privileged: true
          capabilities:
            drop:
            - CAP_MKNOD
            - CAP_NET_RAW
            - CAP_AUDIT_WRITE
        volumeMounts:
        - name: media
          mountPath: /media
        - name: conf
          mountPath: /config
        - name: dev-dri
          mountPath: /dev/dri/renderD128 # Raspberry pi 4 VC4 video card
        - name: card1
          mountPath: /dev/dri/card1
        resources:
          requests:
            memory: "10G"
            cpu: "1000m"
          limits:
            memory: "10G"
            cpu: "1000m"
      enableServiceLinks: false
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-pvc
      - name: conf
        persistentVolumeClaim:
          claimName: jellyfin-conf-pvc
      - name: dev-dri
        hostPath:
          path: /dev/dri/renderD128
          type: CharDevice
      - name: card1
        hostPath:
          path: /dev/dri/card1
          type: CharDevice
      dnsPolicy: ClusterFirst
      restartPolicy: Always
