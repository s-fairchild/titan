servers: 3
agents: 3
apiVersion: k3d.io/v1alpha5
token: ${TOKEN}
hostAliases:
- hostnames:
  - morty.expresso.lan
  ip: 10.50.0.1
- hostnames:
  - rpi4.expresso.lan
  ip: 10.50.0.10
image: docker.io/rancher/k3s:v1.25.6-k3s1
kind: Simple
kubeAPI:
  host: rick.expresso.lan
  hostIP: 10.50.0.2
  hostPort: "6443"
metadata:
  name: rick
network: k3d
options:
  k3d:
    disableImageVolume: false
    disableLoadbalancer: false
    disableRollback: false
    loadbalancer: {}
    timeout: 300000000000
    wait: true
  k3s:
    extraArgs:
    - arg: --tls-san=rick.expresso.lan
      nodeFilters:
      - server:*
    nodeLabels:
    - label: app=compute
      nodeFilters:
      - agent:*
  kubeconfig:
    switchCurrentContext: true
    updateDefaultKubeconfig: true
  runtime:
    HostPidMode: false
ports:
- nodeFilters:
  - loadbalancer
  port: 80:80
- nodeFilters:
  - loadbalancer
  port: 443:443
- nodeFilters:
  - loadbalancer
  port: 8080:80
- nodeFilters:
  - agent:*
  port: "10.50.0.2:53:30053/tcp"
registries: {}
volumes:
- nodeFilters:
  - agent:*
  volume: /data/jellyfin:/data/jellyfin:Z
- nodeFilters:
  - agent:*
  volume: /data/motion:/data/motion:Z
- nodeFilters:
  - agent:*
  volume: /dev/dri:/dev/dri:z
- nodeFilters:
  - agent:*
  volume: compute:/pvs:Z
- nodeFilters:
  - server:*
  volume: /var/local/etc/k3d/manifests:/var/lib/rancher/k3s/server/manifests/compute:Z
