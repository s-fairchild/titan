#!/bin/bash

main() {
    action="$1"
    conn_name="$2"

    if [[ $action == "up" ]]; then
        local -r host_network_subnet="10.50.0.0/24"
        local -r host_network_gateway="10.50.0.1"
        local -r host_network_device="eno1"

        ensure_routes_vrf "$conn_name" \
                            "$host_network_subnet" \
                            "$host_network_gateway" \
                            "$host_network_device"
    fi
}

ensure_routes_vrf() {
    local -r conn="$1"
    local -r subnet="$2"
    local -r gateway="$3"
    local -r subnet_dev="$4"

    log "starting"
    
    local -r vrf_kube="vrf-kube"
    # vrf device names and associated routing tables
    local -rA vrf_devices=(
        ["$vrf_kube"]="1000"
    )

    if [ "$conn" = "$vrf_kube" ]; then
        routes_add_table_dev "${vrf_devices[$vrf_kube]}" \
                        "$subnet" \
                        "$subnet_dev"

        routes_add_table_gateway "${vrf_devices[$vrf_kube]}" \
                        "default" \
                        "$gateway"
    fi
}

declare -r utils_lib=/usr/local/lib/utils.sh
if [ -f "$utils_lib" ]; then
    # shellcheck source=../../../../../../base/coreos/usr/lib/utils.sh
    source "$utils_lib"
fi

declare -r routes_lib=/usr/local/lib/routes.sh
if [ -f "$routes_lib" ]; then
    # shellcheck source=../../../usr/lib/routes.sh
    source "$routes_lib"
fi

main "$NM_DISPATCHER_ACTION" "$CONNECTION_ID" 
