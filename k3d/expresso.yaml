apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: beth
image: docker.io/rancher/k3s:v1.25.6-k3s1
servers: 1
agents: 1
network: k3d
kubeAPI:
  host: "morty.expresso" # important for the `server` setting in the kubeconfig
  hostIP: "10.50.0.1" # where the Kubernetes API will be listening on
  hostPort: "6443" # where the Kubernetes API listening port will be mapped to on your host system
# volumes:
#     - volume: /dev/dri/card0:/dev/dri/card0
#       nodeFilters:
#         - agent:*
ports:
  - port: 80:80
    nodeFilters:
      - loadbalancer
  - port: 443:443
    nodeFilters:
      - loadbalancer
  - port: 8080:80
    nodeFilters:
      - loadbalancer
  - port: 10.50.0.10:53:/tcp # systemd-resolvd listens on 127.0.0.1:53
    nodeFilters:
      - agent:*
  - port: 10.50.0.10:53:30053/udp # systemd-resolvd listens on 127.0.0.1:53
    nodeFilters:
      - agent:*
  # - port: 30000-32767:30000-32767 # TODO creating the loadbalancer induces a hang due to the large amount of port mappings. If the cluster is installed with --no-rollback the install is successful, after the loadbalancer comes up
options:
  k3d: # k3d runtime settings
    wait: true
    timeout: "300s"
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true
  k3s:
    nodeLabels:
      - label: app=compute
        nodeFilters:
          - agent:*
