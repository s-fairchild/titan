apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin
---
apiVersion: v1
data:
  password: c3VwZXJTZWNyZXRQYXNzd29yZAo=
kind: Secret
metadata:
  name: webpassword
  namespace: jellyfin
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jellyfin
    svccontroller.k3s.cattle.io/lbpool: pool1
  name: jellyfin
  namespace: jellyfin
spec:
  ports:
  - name: http-web
    port: 8096
    protocol: TCP
    targetPort: http-web-svc
  selector:
    app: jellyfin
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-data
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 5Gi
  local:
    path: /pvs/jellyfin/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: app
          operator: In
          values:
          - compute
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-media
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 4T
  local:
    path: /var/data/jellyfin
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: app
          operator: In
          values:
          - compute
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volumeType: local
  name: jellyfin-conf-pvc
  namespace: jellyfin
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: local-path
  volumeMode: Filesystem
  volumeName: jellyfin-conf
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-data-pvc
  namespace: jellyfin
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
  volumeMode: Filesystem
  volumeName: jellyfin-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volumeType: local
  name: jellyfin-media-pvc
  namespace: jellyfin
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 3.9T
  storageClassName: local-path
  volumeMode: Filesystem
  volumeName: jellyfin-media
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
      name: jellyfin
      namespace: jellyfin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - compute
      containers:
      - env:
        - name: JELLYFIN_PublishedServerUrl
          value: https://jellyfin.rick.expresso.lan
        - name: JELLYFIN_DATA_DIR
          value: /data
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: webpassword
              optional: false
        image: docker.io/linuxserver/jellyfin:latest
        livenessProbe:
          initialDelaySeconds: 120
          tcpSocket:
            port: http-web-svc
        name: jellyfin
        ports:
        - containerPort: 8096
          name: http-web-svc
          protocol: TCP
        resources:
          limits:
            cpu: 2500m
            memory: 15G
          requests:
            cpu: 500m
            memory: 15G
        securityContext:
          capabilities:
            drop:
            - CAP_MKNOD
            - CAP_NET_RAW
            - CAP_AUDIT_WRITE
          privileged: true
        volumeMounts:
        - mountPath: /media
          name: media
        - mountPath: /config/data
          name: data
          subPath: data
        - mountPath: /config/cache
          name: cache
          subPath: cache
        - mountPath: /dev/dri/renderD128
          name: dev-dri
        - mountPath: /config/log
          name: logs
          subPath: log
        - mountPath: /config/data/transcodes
          name: transcodes
          subPath: transcodes
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-pvc
      - name: data
        persistentVolumeClaim:
          claimName: jellyfin-data-pvc
      - hostPath:
          path: /dev/dri/renderD128
          type: CharDevice
        name: dev-dri
      - hostPath:
          path: /dev/dri/card1
          type: CharDevice
        name: card1
      - emptyDir:
          medium: Memory
          sizeLimit: 2Gi
        name: cache
      - emptyDir:
          medium: Memory
          sizeLimit: 500Mi
        name: logs
      - emptyDir:
          medium: Memory
          sizeLimit: 10Gi
        name: transcodes
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    traefik.frontend.rule.type: PathPrefix
  labels:
    app: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  rules:
  - host: jellyfin.rick.expresso.lan
    http:
      paths:
      - backend:
          service:
            name: jellyfin
            port:
              name: http-web
        path: /
        pathType: Prefix
