---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: traefik-crd
  namespace: kube-system
spec:
  targetNamespace: kube-system
  chart: https://%{KUBERNETES_API}%/static/charts/traefik-crd-25.0.2+up25.0.0.tgz
---
apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: traefik
  namespace: kube-system
spec:
  targetNamespace: kube-system
  chart: https://%{KUBERNETES_API}%/static/charts/traefik-25.0.2+up25.0.0.tgz
  set:
  valuesContent: |-
    dnsPolicy: ClusterFirst
    podAnnotations:
      prometheus.io/port: "8082"
      prometheus.io/scrape: "true"
    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
        # -- Allows to return 503 when there is no endpoints available
        allowEmptyServices: true
      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true
        # -- Allows to return 503 when there is no endpoints available
        allowEmptyServices: true
        # Required for external IP address to be assigned
        # values documentation isn't clear on what this is used for
        publishedService:
          enabled: true
    hostNetwork: false
    rbac:
      enabled: true
      namespaced: false
    priorityClassName: "system-cluster-critical"
    nodeSelector:
      svccontroller.k3s.cattle.io/enablelb: "true"
    image:
      repository: "rancher/mirrored-library-traefik"
      tag: "2.10.5"
      pullPolicy: IfNotPresent
    tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "app"
        operator: "Equal"
        values:
          - compute
        effect: "NoSchedule"
    service:
      enabled: true
      single: true
      type: LoadBalancer
      ipFamilyPolicy: "SingleStack"
      spec: {}
    logs:
      general:
        # format: json
        # -- Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
        level: DEBUG
      access:
        enabled: true
