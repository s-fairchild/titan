apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
  namespace: pihole
  name: pihole
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      namespace: pihole
      name: pihole
      labels:
        app: pihole
        services: dns
    spec:
      volumes:
        - name: pihole-local
          configMap:
            name: pihole-local-records
            optional: false
        - name: pihole-cname
          configMap:
            name: pihole-cname-records
            optional: false
        - name: webpassword
          secret:
            secretName: webpassword
            optional: false
            defaultMode: 0400
        - name: unbound-config
          configMap:
            name: unbound-conf
            optional: false
        - name: dnsmasq-port-config
          configMap:
            name: dnsmasq-port-conf
            optional: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: services
                  operator: In
                  values:
                    - dns
      hostname: pihole
      automountServiceAccountToken: false
      dnsPolicy: None
      enableServiceLinks: false
      dnsConfig:
        nameservers:
          - "127.0.0.1"
          - "1.1.1.1"
      restartPolicy: Always
      containers:
      - name: pihole
        image: docker.io/pihole/pihole:latest
        imagePullPolicy: IfNotPresent
        # See this for all env variables available https://github.com/pi-hole/docker-pi-hole#environment-variables
        env:
        # - name: PROXY_LOCATION
        #   value: "pihole.rick.expresso.lan"
        - name: VIRTUAL_HOST
          value: "pihole.rick.expresso.lan"
        - name: ServerIP
          value: "10.50.0.2"
        - name: TZ
          value: "America/New_York"
        - name: DNSMASQ_LISTENING
          value: "all"
        - name: FTLCONF_LOCAL_IPV4
          value: "10.50.0.2"
        - name: PIHOLE_DNS_
          value: "127.0.0.1#5335"
        - name: DHCP_ACTIVE
          value: "false"
        - name: TEMPERATUREUNIT
          value: "f"
        - name: WEBTHEME
          value: "default-darker"
        - name: WEB_PORT
          value: "8090"
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: webpassword
              key: admin
              optional: false
        resources:
          requests:
            memory: "100Mi"
            cpu: "500m"
          limits:
            memory: "150Mi"
            cpu: "5000m"
        ports:
        - name: dns-udp
          containerPort: 1053
          protocol: UDP
        - name: dns-tcp
          containerPort: 1053
          protocol: TCP
        - name: http-web-admin
          containerPort: 8090
          protocol: TCP
        securityContext:
          capabilities:
            add:
              # Needed for dhcp server if used
              # - CAP_NET_RAW
              # - CAP_NET_ADMIN
              - CAP_SYS_NICE
              - CAP_CHOWN
            drop:
            - CAP_MKNOD
            - CAP_NET_RAW
            - CAP_AUDIT_WRITE
        volumeMounts:
        # - name: setup
        #   mountPath: /etc/pihole/setupVars.conf
        #   mountPropagation: None
        #   subPath: setupVars.conf
        - name: pihole-cname
          mountPath: /etc/dnsmasq.d/05-pihole-custom-cname.conf
          mountPropagation: None
          subPath: 05-pihole-custom-cname.conf
        - name: pihole-local
          mountPath: /etc/pihole/custom.list
          mountPropagation: None
          subPath: custom.list
        - name: dnsmasq-port-config
          mountPath: /etc/dnsmasq.d/port.conf
          subPath: port.conf
        livenessProbe:
          exec:
            command:
            - dig
            - www.google.com
            - "@localhost"
            - -p
            - "1053"
          initialDelaySeconds: 60
          periodSeconds: 5
      - name: unbound
        image: madnuttah/unbound:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "100Mi"
            cpu: "30m"
          limits:
            memory: "100Mi"
            cpu: "30m"
        volumeMounts:
          - name: unbound-config
            mountPath: /opt/unbound/etc/unbound
            readOnly: true
        livenessProbe:
          exec:
            command:
            - nslookup
            - www.google.com
            - 127.0.0.1:5335
          initialDelaySeconds: 60
          periodSeconds: 5
