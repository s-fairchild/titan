---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      name: jellyfin
      namespace: jellyfin
      labels:
        app: jellyfin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: app
                  operator: In
                  values:
                    - compute
      containers:
      - name: jellyfin
        livenessProbe:
          initialDelaySeconds: 120
          httpGet: 
            path: /health
            port: web
            scheme: HTTP
        image: docker.io/jellyfin/jellyfin:10.10.7
        env:
        - name: DISABLE_SERVER_SELECTION
          value: "1"
        ports:
        - name: web
          containerPort: 8096
          protocol: TCP
        securityContext:
          privileged: true
          capabilities:
            drop:
            - NET_ADMIN
            - CAP_MKNOD
            - CAP_NET_RAW
            - CAP_AUDIT_WRITE
        volumeMounts:
        - name: data
          mountPath: /var/lib/jellyfin
        - name: config
          mountPath: /etc/jellyfin
        - name: render
          mountPath: /dev/dri/renderD128
        resources:
          requests:
            memory: "1G"
            cpu: "500m"
          limits:
            memory: "15G"
            cpu: "5000m"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data-pvc
      - name: config
        persistentVolumeClaim:
          claimName: config-pvc
      - name: render
        hostPath:
          path: /dev/dri/renderD128
          type: CharDevice
      - name: card1
        hostPath:
          path: /dev/dri/card1
          type: CharDevice
      dnsPolicy: ClusterFirst
      restartPolicy: Always
