apiVersion: v1
kind: Namespace
metadata:
  name: pihole
---
apiVersion: v1
data:
  port.conf: |
    port=1053
kind: ConfigMap
metadata:
  name: dnsmasq-conf-port
  namespace: pihole
---
apiVersion: v1
data:
  05-pihole-custom-cname.conf: |-
    cname=pihole.app.rick.expresso.lan,app.rick.expresso.lan
    cname=jellyfin.app.rick.expresso.lan,app.rick.expresso.lan
    cname=rtsp0.app.rick.expresso.lan,app.rick.expresso.lan
    cname=app.rick.expresso.lan,rick.expresso.lan
    cname=rick.lan,rick.expresso.lan
    cname=rick,rick.expresso.lan
kind: ConfigMap
metadata:
  name: pihole-cname-records
  namespace: pihole
---
apiVersion: v1
data:
  custom.list: |
    10.50.0.100 r10.expresso.lan
    10.50.0.50 rh-thinkpad-p1.expresso.lan
    10.50.0.10 rpi4.expresso.lan
    10.50.0.2 rick.expresso.lan
    10.50.0.1 expresso.lan
kind: ConfigMap
metadata:
  name: pihole-local-records
  namespace: pihole
---
apiVersion: v1
data:
  web.password.txt: YWRtaW5QYXNzd29yZAo=
kind: Secret
metadata:
  name: web-password-m7fb8g85g2
  namespace: pihole
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pihole
  name: pihole
  namespace: pihole
spec:
  ports:
  - name: www
    port: 8091
    protocol: TCP
    targetPort: 8090
  selector:
    app: pihole
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pihole
  name: pihole-dns
  namespace: pihole
spec:
  ports:
  - name: 53-53-udp
    nodePort: 30053
    port: 1054
    protocol: UDP
    targetPort: 1053
  selector:
    app: pihole
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
  name: pihole
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
        services: dns
      name: pihole
      namespace: pihole
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - compute
      containers:
      - env:
        - name: VIRTUAL_HOST
          value: pihole.app.rick.expresso.lan
        - name: TZ
          value: America/New_York
        - name: DNSMASQ_LISTENING
          value: all
        - name: PIHOLE_DNS_
          value: 8.8.8.8;8.8.4.4
        - name: DHCP_ACTIVE
          value: "false"
        - name: TEMPERATUREUNIT
          value: f
        - name: WEBTHEME
          value: default-darker
        - name: WEB_PORT
          value: "8090"
        - name: QUERY_LOGGING
          value: "false"
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              key: web.password.txt
              name: web-password-m7fb8g85g2
              optional: false
        image: docker.io/pihole/pihole:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - dig
            - www.google.com
            - '@localhost'
            - -p
            - "1053"
          initialDelaySeconds: 60
          periodSeconds: 5
        name: pihole
        ports:
        - containerPort: 1053
          protocol: UDP
        - containerPort: 8090
          protocol: TCP
        resources:
          limits:
            cpu: 5000m
            memory: 150Mi
          requests:
            cpu: 500m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - CAP_SYS_NICE
            - CAP_CHOWN
            drop:
            - CAP_MKNOD
            - CAP_NET_RAW
            - CAP_AUDIT_WRITE
        volumeMounts:
        - mountPath: /etc/dnsmasq.d/05-pihole-custom-cname.conf
          mountPropagation: None
          name: pihole-cname
          subPath: 05-pihole-custom-cname.conf
        - mountPath: /etc/pihole/custom.list
          mountPropagation: None
          name: pihole-local
          subPath: custom.list
        - mountPath: /etc/dnsmasq.d/port.conf
          name: dnsmasq-port
          subPath: port.conf
      dnsConfig:
        nameservers:
        - 127.0.0.1
        - 1.1.1.1
      dnsPolicy: None
      enableServiceLinks: false
      hostname: pihole
      restartPolicy: Always
      volumes:
      - configMap:
          name: pihole-local-records
          optional: false
        name: pihole-local
      - configMap:
          name: pihole-cname-records
          optional: false
        name: pihole-cname
      - configMap:
          name: dnsmasq-conf-port
          optional: false
        name: dnsmasq-port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    traefik.frontend.rule.type: PathPrefix
  labels:
    app: pihole
  name: pihole
  namespace: pihole
spec:
  rules:
  - host: pihole.app.rick.expresso.lan
    http:
      paths:
      - backend:
          service:
            name: pihole
            port:
              name: www
        path: /
        pathType: Prefix
