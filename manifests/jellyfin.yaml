# TODO setup healthcheck
# TODO setup SSL cert and https port
apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    traefik.frontend.rule.type: PathPrefix
spec:
  rules:
  - host: jellyfin.rpi4
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-web-svc
      protocol: TCP
  selector:
    app: jellyfin
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-media
  namespace: jellyfin
spec:
  capacity:
    storage: 3Ti
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  local:
    path: /data/jellyfin
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: app
              operator: In
              values:
                - "compute"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-conf
  namespace: jellyfin
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  local:
    path: /pvs/jellyfin/jellyfin-conf
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: app
              operator: In
              values:
                - "compute"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-conf-pvc
  namespace: jellyfin
spec:
  volumeName: jellyfin-conf
  volumeMode: Filesystem
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-media-pvc
  namespace: jellyfin
spec:
  volumeName: jellyfin-media
  volumeMode: Filesystem
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
spec:
  replicas: 1 # TODO get this working with 3 replicas, probably by running on a single agent
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      name: jellyfin
      namespace: jellyfin
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        livenessProbe:
          tcpSocket:
            port: http-web-svc
          initialDelaySeconds: 120
          periodSeconds: 5
        env:
        - name: JELLYFIN_PublishedServerUrl
          value: https://jellyfin.rpi4
        image: docker.io/jellyfin/jellyfin:latest
        ports:
        - containerPort: 8096
          name: http-web-svc
          protocol: TCP
        securityContext:
          privileged: true
          capabilities:
            drop:
            - CAP_MKNOD
            - CAP_NET_RAW
            - CAP_AUDIT_WRITE
        volumeMounts:
        - name: media
          mountPath: /media
        - name: conf
          mountPath: /config
        - name: dev-dri
          mountPath: /dev/dri/renderD128 # Raspberry pi 4 VC4 video card
        - name: card0
          mountPath: /dev/dri/card0
        resources:
          requests:
            memory: "250Mi"
            cpu: "50m"
          limits:
            memory: "1Gi"
      enableServiceLinks: false
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-pvc
      - name: conf
        persistentVolumeClaim:
          claimName: jellyfin-conf-pvc
      - name: dev-dri
        hostPath:
          path: /dev/dri/renderD128
          type: CharDevice
      - name: card0
        hostPath:
          path: /dev/dri/card0
          type: CharDevice
      dnsPolicy: ClusterFirst
      restartPolicy: Always
